// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarFacts.Database;

namespace SolarFacts.Database.Migrations
{
    [DbContext(typeof(SolarContext))]
    partial class SolarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("SolarFacts.Database.Models.CelestialBody", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Diameter")
                        .HasColumnType("REAL");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SolarSystemID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("SurfaceTempHigh")
                        .HasColumnType("REAL");

                    b.Property<double>("SurfaceTempLow")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("SolarSystemID");

                    b.ToTable("CelestialBody");

                    b.HasDiscriminator<string>("Discriminator").HasValue("CelestialBody");
                });

            modelBuilder.Entity("SolarFacts.Database.Models.SolarSystem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("SolarSystems");
                });

            modelBuilder.Entity("SolarFacts.Database.Models.Planet", b =>
                {
                    b.HasBaseType("SolarFacts.Database.Models.CelestialBody");

                    b.Property<int>("MoonCount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("OrbitDistance")
                        .HasColumnType("REAL");

                    b.Property<double>("OrbitPeriod")
                        .HasColumnType("REAL");

                    b.Property<int>("PlanetClass")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Planet");
                });

            modelBuilder.Entity("SolarFacts.Database.Models.Star", b =>
                {
                    b.HasBaseType("SolarFacts.Database.Models.CelestialBody");

                    b.Property<double>("Age")
                        .HasColumnType("REAL");

                    b.Property<double>("CoreTemp")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("Star");
                });

            modelBuilder.Entity("SolarFacts.Database.Models.CelestialBody", b =>
                {
                    b.HasOne("SolarFacts.Database.Models.SolarSystem", null)
                        .WithMany("Bodies")
                        .HasForeignKey("SolarSystemID");
                });

            modelBuilder.Entity("SolarFacts.Database.Models.SolarSystem", b =>
                {
                    b.Navigation("Bodies");
                });
#pragma warning restore 612, 618
        }
    }
}
